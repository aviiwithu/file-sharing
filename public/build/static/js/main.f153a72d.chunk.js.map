{"version":3,"sources":["Header.jsx","Main.jsx","Download.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","dotenv","config","Main","useState","link","setLink","uploaded","setUploaded","useEffect","console","log","process","handleUpload","file","url","REACT_APP_APP_BASE_URL","formData","FormData","append","axios","method","data","onUploadProgress","e","percent","parseInt","loaded","total","then","catch","err","onDrop","preventDefault","stopPropagation","dataTransfer","files","handleDrop","onDragOver","handleDragOver","src","alt","type","name","id","onChange","target","onClick","document","getElementById","click","style","width","readOnly","value","getElementsByClassName","select","execCommand","Download","params","useParams","uuid","size","href","downloadLink","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f153a72d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"headingContainer\">\r\n            <h2 className=\"heading\">File Sharing</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\nconst Main = () => {\r\n\r\n    const [link, setLink] = useState();\r\n    const [uploaded, setUploaded] = useState();\r\n\r\n    useEffect(()=>{\r\n        \r\n    },[link,uploaded]);\r\n\r\n    console.log(process.env);\r\n\r\n    const handleUpload=(file)=>{\r\n        const url = `${process.env.REACT_APP_APP_BASE_URL}/api/files`;\r\n        const formData = new FormData();\r\n        formData.append(\"myFile\", file);\r\n\r\n        axios({\r\n            url: url,\r\n            method: \"post\",\r\n            data: formData,\r\n            onUploadProgress: (e)=>{\r\n                let percent = parseInt(e.loaded*100/e.total);\r\n                setUploaded(percent);\r\n                // console.log(percent);\r\n            }\r\n        }).then(({data})=>{\r\n            setLink(data);\r\n            // console.log(data);\r\n        }).catch(err=>console.log(err))\r\n    }\r\n\r\n    const handleDrop =(e)=>{\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        handleUpload(e.dataTransfer.files[0]);\r\n    }\r\n\r\n    const handleDragOver=(e)=>{\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n\r\n    const browseBtn =()=>{\r\n        const fileInput = document.getElementById(\"fileInput\");  \r\n        fileInput.click();\r\n    }\r\n\r\n    const handleInput=(e)=>{\r\n        // console.log(e.target.files);\r\n        handleUpload(e.target.files[0]);\r\n        setLink();\r\n    }\r\n\r\n    const copyLink=()=>{\r\n        const link = document.getElementsByClassName(\"link\")[0];\r\n        link.select();\r\n        document.execCommand(\"copy\");       \r\n    }\r\n    \r\n    return (\r\n        <div className=\"mainContainer\">\r\n            <div className=\"dropZoneContainer\">\r\n                <div className=\"dropZone\"   onDrop={(e)=>handleDrop(e)} onDragOver={e => handleDragOver(e)}  >\r\n                    <div className=\"iconContainer\">\r\n                        <img src=\"/images/upload-icon.png\" alt=\"upload icon\" className=\"uploadIcon\" />\r\n                    </div>\r\n                    <input type=\"file\" name=\"myFile\" id=\"fileInput\" onChange={handleInput} />\r\n                    <div className=\"title\">\r\n                        Drop your Files here or <span className=\"browseBtn\" onClick={browseBtn} >browser</span>\r\n                    </div>\r\n\r\n                    { uploaded<100 ?\r\n                        <div className=\"loading\" style={{width:`${uploaded}%`}}>\r\n                            {uploaded+\"%\"}..completed\r\n                        </div> :\r\n                        (\r\n                            link && \r\n                            <div className=\"downloadLink\">\r\n                                <input type=\"text\" className=\"link\" readOnly value={link.file} />\r\n                                <img src=\"/images/copy-icon.svg\" className=\"copyIcon\" alt=\"copy icon\" onClick={copyLink} />\r\n                            </div>\r\n                        )\r\n                     }\r\n\r\n                </div>\r\n                \r\n            </div>\r\n                <div className=\"imageContainer\">\r\n                    <img src=\"/images/upload-icon.svg\" alt=\"upload icon\" className=\"outerImg\" />\r\n                </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React,{useState,useEffect} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\n\r\ndotenv.config();\r\n\r\nconst Download = () => {\r\n    const params = useParams();\r\n\r\n    const [link, setLink] = useState();\r\n    \r\n   useEffect(()=>{\r\n       axios({\r\n           url: `${process.env.REACT_APP_APP_BASE_URL}/files/${params.uuid}`,\r\n           method: 'get',\r\n       }).then(({data})=>setLink(data)).catch(err=>console.log(err))\r\n\r\n   },[params.uuid])\r\n\r\n\r\n    return (\r\n        <div className=\"downloadContainer\">\r\n            {\r\n                !link?<img src=\"/images/loading-icon-animated.svg\" alt=\"loading icon\" />:\r\n            <div className=\"content\">\r\n                <img src=\"/images/download-icon.png\" alt=\"download icon\" className=\"downloadIcon\" />\r\n                <h2 className=\"title\">Your file is ready to download</h2>\r\n                <p className=\"subTitle\">Link expires in 24 hours</p>\r\n                <p className=\"fileName\">{link.name}</p>\r\n                <p className=\"fileSize\">{parseInt((link.size)/1024)} KB</p>\r\n                <a href={link.downloadLink}><button className=\"downloadBtn\" > Download </button></a>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Download\r\n","\nimport './App.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Download from './Download';\nimport {Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Switch>\n        <Route path=\"/\" exact component={Main} />\n        <Route path=\"/download/:uuid\" exact component={Download} />\n      </Switch>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <App />\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}